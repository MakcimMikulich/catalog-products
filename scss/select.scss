// Both native and custom selects must have the same width/height.
.selectNative,
.selectCustom {
	position: relative;
	width: 100%;
	height: 41.6px;

	@media (max-width: 550px) {
		width: 100%;
	}
}

// Make sure the custom select does not mess with the layout
.selectCustom {
	position: absolute;
	top: 0;
	left: 0;
	display: none;
}

// This media query detects devices where the primary
// input mechanism can hover over elements. (e.g. computers with a mouse)
@media (hover: hover) {
	// Since we are using a mouse, it's safe to show the custom select.
	.selectCustom {
		display: block;
	}

	// In a computer using keyboard? Then let's hide back the custom select
	// while the native one is focused:
	.selectNative:focus + .selectCustom {
		display: none;
	}
}

/* Add the focus states too, They matter, always! */
.selectNative:focus,
.selectCustom.isActive .selectCustom-trigger {
	outline: none;
}

//
// Rest of the styles to create the custom select.
// Just make sure the native and the custom have a similar "box" (the trigger).
//

.select {
	position: relative;
}

.selectLabel {
	display: block;
	font-weight: bold;
	margin-bottom: 0.4rem;
}

.selectWrapper {
	position: relative;
}

.selectNative,
.selectCustom-trigger {
	color: #000;
	font-family: Gilroy, sans-serif;
	font-size: 14px;
	font-weight: 500;
	line-height: 24px;
	background-color: #fff;
	border: 1px solid #eef1f5;
	border-radius: 4px;
}

.select-icon__wrapper {
	display: flex;
	align-items: center;
}

.select-icon {
	top: 0;
	position: absolute;
	z-index: 3;
	height: 100%;
	padding-left: 16px;
	margin-top: 1px;
	display: flex;
	align-items: center;
	pointer-events: none;
}

.selectNative {
	-webkit-appearance: none;
	-moz-appearance: none;
	background-image: url("data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
	background-repeat: no-repeat;
	background-position-x: 100%;
	background-position-y: 0.8rem;
	padding: 0rem 0.8rem;
	padding-left: 40px;
}

.selectCustom-trigger {
	position: relative;
	width: 100%;
	height: 100%;
	background-color: #fff;
	padding: 8px;
	padding-left: 40px;
	cursor: pointer;
	transition: border-color 0.2s;
}

// .selectCustom-trigger::after {
// 	content: "▾";
// 	position: absolute;
// 	top: 0;
// 	line-height: 3.8rem;
// 	right: 0.8rem;
// }

.selectCustom-trigger:hover {
	border-color: #8fc641;
}

.selectCustom-options {
	position: absolute;
	top: 110%;
	left: 0;
	width: 100%;
	border: 1px solid #b4b3b3;
	border-radius: 0.4rem;
	background-color: #fff;
	box-shadow: 0 0 4px #e9e1f8;
	z-index: 1;
	display: none;
}

.selectCustom.isActive .selectCustom-options {
	display: block;
}

.selectCustom-option {
	color: #000;
	font-family: Gilroy, sans-serif;
	font-size: 14px;
	font-weight: 500;
	line-height: 24px;
	position: relative;
	padding: 0.8rem;
	padding-left: 2.5rem;
}

.selectCustom-option.isHover,
.selectCustom-option:hover {
	background-color: #8fc641; // contrast AA
	color: white;
	cursor: default;
}

.selectCustom-option:not(:last-of-type)::after {
	content: "";
	position: absolute;
	bottom: 0;
	left: 0;
	width: 100%;
	border-bottom: 1px solid #d3d3d3;
}

.selectCustom-option.isActive::before {
	content: "✓";
	position: absolute;
	left: 0.8rem;
}

// ----- Theme styles -----

.title {
	font-size: 2rem;
	font-weight: 600;
	margin: 1.6rem;
	line-height: 1.2;
	text-align: center;
}

.inst {
	margin-bottom: 1rem;
}

.note {
	font-size: 1.4rem;
	margin: 2rem 0 0;
	color: #6b6b6b;
}

.link {
	display: inline-block;
	color: inherit;
	text-decoration-color: #9b78de;
	padding: 0.1rem 0;
	transform: translateX(-0.1em);
	margin-right: -0.1em;

	&:hover {
		color: #8c00ff;
	}

	&:focus {
		outline: none;
		background-color: #e9e1f8;
	}
}
